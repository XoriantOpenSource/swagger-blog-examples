/*******************************************************************************
 * Copyright 2017 Xoriant Corporation.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
/*
 * Doctor Appointment
 * Appointment
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.InlineResponse200;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DoctorApi
 */
@Ignore
public class DoctorApiTest {

    private final DoctorApi api = new DoctorApi();

    
    /**
     * Deletes a Doctor
     *
     * delete operation
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDoctorTest() throws ApiException {
        Long doctorId = null;
        api.deleteDoctor(doctorId);

        // TODO: test validations
    }
    
    /**
     * Find Doctos by Id
     *
     * Get Doctos based on Id specified
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDoctorsByIdTest() throws ApiException {
        List<String> doctorId = null;
        List<InlineResponse200> response = api.getDoctorsById(doctorId);

        // TODO: test validations
    }
    
    /**
     * Updates a Doctor with form data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDoctorTest() throws ApiException {
        Long doctorId = null;
        String name = null;
        api.updateDoctor(doctorId, name);

        // TODO: test validations
    }
    
}
